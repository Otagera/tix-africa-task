{"version":3,"file":"multer.js","sourceRoot":"","sources":["../../src/middlewares/multer.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAoC;AAEpC,kDAA+C;AAC/C,0CAAoB;AAEpB,IAAM,YAAY,GAAG,oBAAU,CAAC,EAAE,CAAC;AACnC,YAAY,CAAC,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO;IACnB,OAAO,EAAE,iBAAiB;IAC1B,UAAU,EAAE,6BAA6B;CACzC,CAAC,CAAC;AAEH,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB;;;;;;;;;;;;;EAaE;AACD,OAAO,GAAG,gBAAM,CAAC,WAAW,CAAC;IAC5B,WAAW,EAAE,UAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC1B,IAAG,CAAC,YAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAC;YAC/B,YAAE,CAAC,KAAK,CAAC,YAAY,EAAE,UAAC,GAAG;gBAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;SACH;aAAK;YACL,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;SACvB;IACF,CAAC;IACD,QAAQ,EAAE,UAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACvB,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3E,CAAC;CACD,CAAC,CAAC;AACJ,GAAG;AAEH,IAAM,UAAU,GAAG,UAAC,GAAG,EAAE,IAAI,EAAE,EAAE;IAChC,IAAG,IAAI,CAAC,QAAQ,KAAK,YAAY,IAAK,IAAI,CAAC,QAAQ,KAAK,WAAW,IAAI,IAAI,CAAC,QAAQ,KAAK,eAAe,EAAC;QACxG,iBAAiB;KACjB;SAAI;QACJ,kBAAkB;KAClB;IACD,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAChB,CAAC,CAAA;AACY,QAAA,MAAM,GAAG,gBAAM,CAAC;IAC5B,OAAO,EAAE,OAAO;IAChB,MAAM,EAAE;QACP,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,KAAK;KAC/B;IACD,UAAU,EAAE,UAAU;CACtB,CAAC,CAAC","sourcesContent":["import cloudinary from 'cloudinary';\r\nimport { CloudinaryStorage } from 'multer-storage-cloudinary';\r\nimport multer, { StorageEngine } from 'multer';\r\nimport fs from 'fs';\r\n\r\nconst cloudinaryV2 = cloudinary.v2;\r\ncloudinaryV2.config({\r\n\tcloud_name: 'lenxo',\r\n\tapi_key: '432723375944148',\r\n\tapi_secret: 'JSDqr-nva3H92LFl-AktW0y5MZ4'\r\n});\r\n\r\nlet storage = null;\r\n/*\r\nif(process.env.NODE_ENV === 'production'){\r\n\tstorage = new CloudinaryStorage({\r\n\t\tcloudinary: cloudinaryV2,\r\n\t\tparams: async (req, file)=>{\r\n\t\t\treturn {\r\n\t\t\t\tfolder: 'chatapp/uploads',\r\n\t\t\t\tresource_type: 'auto',\r\n\t\t\t\tpublic_id: new Date().toISOString().replace(/:/g, '-') + file.originalname\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n}else {\r\n*/\r\n\tstorage = multer.diskStorage({\r\n\t\tdestination: (req, file, cb)=>{\r\n\t\t\tif(!fs.existsSync('./uploads/')){\r\n\t\t\t\tfs.mkdir('./uploads/', (err)=>{\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tcb(null, './uploads/');\r\n\t\t\t\t});\r\n\t\t\t}else {\r\n\t\t\t\tcb(null, './uploads/');\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tfilename: (req, file, cb)=>{\r\n\t\t\tcb(null, new Date().toISOString().replace(/:/g, '-') + file.originalname);\r\n\t\t}\r\n\t});\r\n//}\r\n\r\nconst filefilter = (req, file, cb)=>{\r\n\tif(file.mimetype === 'image/jpeg'  || file.mimetype === 'image/png' || file.mimetype === 'image/svg+xml'){\r\n\t\t//cb(null, true);\r\n\t}else{\r\n\t\t//cb(null, false);\r\n\t}\r\n\tcb(null, true);\r\n}\r\nexport const upload = multer({\r\n\tstorage: storage,\r\n\tlimits: {\r\n\t\tfileSize: 1024 * 1024 * 5 //5MB\r\n\t},\r\n\tfileFilter: filefilter\r\n});\r\n"]}