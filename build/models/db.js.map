{"version":3,"file":"db.js","sourceRoot":"","sources":["../../src/models/db.ts"],"names":[],"mappings":";;;;;AAAA,sDAAgC;AAChC,IAAI,GAAG,GAAG,EAAE,CAAC;AAEb,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;IAClE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;CACjC;KAAK,IAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC;IAC7B,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;CACjC;AAED,IAAG,GAAG,EAAC;IACH,kBAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;CAC7H;AAGD,kBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE;IAChC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,2BAAyB,GAAK,CAAC,CAAC;IAC5C,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAA,GAAG;IAC/B,OAAO,CAAC,GAAG,CAAC,gCAA8B,GAAK,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AAGH,IAAM,QAAQ,GAAG,UAAC,GAAW,EAAE,QAAmC;IAC9D,kBAAQ,CAAC,UAAU,CAAC,KAAK,CAAE;QACvB,OAAO,CAAC,GAAG,CAAC,mCAAiC,GAAK,CAAC,CAAC;QACpD,QAAQ,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAIF,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE;IACpB,QAAQ,CAAC,iBAAiB,EAAE;QACxB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAGH,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE;IACjB,QAAQ,CAAC,iBAAiB,EAAE;QACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAGH,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE;IAClB,QAAQ,CAAC,qBAAqB,EAAE;QAC5B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,wBAAsB;AACtB,yBAAuB","sourcesContent":["import mongoose from 'mongoose';\r\nlet uri = '';\r\n\r\nif (process.env.NODE_ENV === 'production' && process.env.MONGODB_URI) {\r\n    uri = process.env.MONGODB_URI;\r\n}else if(process.env.MONGODB_URI){\r\n    uri = process.env.MONGODB_URI;\r\n}\r\n\r\nif(uri){\r\n    mongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true, useFindAndModify: false });\r\n}\r\n\r\n\r\nmongoose.connection.on('connected', () => {\r\n    console.log(\"======================\");\r\n    console.log(\"======================\");\r\n    console.log(`Mongoose connected to ${uri}`);\r\n    console.log(\"======================\");\r\n    console.log(\"======================\");\r\n});\r\n\r\nmongoose.connection.on('error', err => {\r\n    console.log(`Mongoose connection error: ${err}`);\r\n});\r\n\r\nmongoose.connection.on('disconnected', () => {\r\n    console.log('Mongoose disconnected');\r\n});\r\n\r\n\r\nconst shutdown = (msg: string, callback: mongoose.HookNextFunction) => {\r\n    mongoose.connection.close( () => {\r\n        console.log(`Mongoose disconnected through ${msg}`);\r\n        callback();\r\n    });\r\n};\r\n\r\n\r\n\r\nprocess.once('SIGUSR2', () => {\r\n    shutdown('nodemon restart', () => {\r\n        process.kill(process.pid, 'SIGUSR2');\r\n    });\r\n});\r\n\r\n\r\nprocess.on('SIGINT', () => {\r\n    shutdown('app termination', () => {\r\n        process.exit(0);\r\n    });\r\n});\r\n\r\n\r\nprocess.on('SIGTERM', () => {\r\n    shutdown('Heroku app shutdown', () => {\r\n        process.exit(0);\r\n    });\r\n});\r\n\r\nimport './user.model';\r\nimport './event.model';"]}