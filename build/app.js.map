{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"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","sourcesContent":["//To  make sure any property i add to response or request would be recognized\ndeclare module 'express-serve-static-core' {\n\tinterface Response {\n\t\tstatusJson: (statusCode: number, data: {})=>void\n\t}\n}\n\nimport { Express } from 'express-serve-static-core';\nimport express, { Request, Response, NextFunction, ErrorRequestHandler } from 'express';\nimport createError from 'http-errors';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport dotenv from 'dotenv';\nimport * as http from 'http';\n\ndotenv.config();\n\nexport const app: Express = express();\n\n/**\n * Create HTTP server.\n */\nconst server: http.Server = http.createServer(app);\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n/*app.set('etag', false);\napp.disable('etag');*/\n\napp.use(logger('dev'));\napp.use('/api/uploads', express.static('uploads'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n/*app.use((req: Request, res: Response, next: NextFunction)=>{\n  res.set('Cache-Control', 'no-store');\n  next();\n});*/\napp.use(express.static(path.join(__dirname, 'public')));\n\n\napp.use((req: Request, res: Response, next: NextFunction)=>{\n\tres.statusJson = (statusCode: number, data: {}): void=>{\n\t\tlet obj = {\n\t\t\t...data,\n\t\t\tstatusCode: statusCode\n\t\t}\n\t\tres.status(statusCode).json(obj);\n\t\treturn;\n\t};\n\tnext();\n});\n\nimport { AppRouter } from './AppRouter';\napp.use(AppRouter.getInstance());\n\nimport './models/db';\nimport './controllers/RootController';\nimport './controllers/AuthController';\nimport './controllers/APIController';\n\n// catch 404 and forward to error handler\napp.use((req: Request, res: Response, next: NextFunction)=>{\n  next(createError(404));\n});\n\n// error handler\napp.use((err: any, req: Request, res: Response, next: NextFunction)=>{\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('chatapp:server');\n\n/**\n * Get port from environment and store in Express.\n */\nvar port = normalizePort(process.env.PORT || '3000');\n\n\napp.set('port', port);\n\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val: any) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) { return val; }\n\n  if (port >= 0) { return port; }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error: any) {\n  if (error.syscall !== 'listen') { throw error; }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : (addr)? 'port ' + addr.port: '';\n  debug('Listening on ' + bind);\n  console.log(\"=============\");\n  console.log(\"=============\");\n  console.log(\"App is listening from port: \" + port);\n}"]}