{"version":3,"file":"AuthController.js","sourceRoot":"","sources":["../../src/controllers/AuthController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\nimport { get, post, bodyValidator, controller } from './decorators/index';\r\nimport mongoose from 'mongoose';\r\nimport { UserBaseDocument, UserWithId, User, RequestWithBody } from '../interfaces';\r\n\r\nconst UserModel = mongoose.model('User');\r\n\r\n@controller('/auth')\r\nclass AuthController {\r\n\t@post('/login')\r\n\t@bodyValidator('username', 'password')\r\n\tuserLogin(req: RequestWithBody, res: Response){\r\n\t\tconst { username, password } = req.body;\r\n\t\tconst dataF = {\r\n\t\t\tmessage: 'Auth failed!'\r\n\t\t}\r\n\t\tUserModel.find({ username: username.toLowerCase() })\r\n\t\t\t.exec()\r\n\t\t\t.then((users: UserBaseDocument[])=>{ \r\n\t\t\t\tif(users.length < 1){\r\n\t\t\t\t\treturn res.statusJson(401, { data: dataF });\r\n\t\t\t\t}\r\n\t\t\t\tbcrypt.compare(password, users[0].password, (err, result)=>{\r\n\t\t\t\t\tif(err){ return res.statusJson(401, { data: dataF }); }\r\n\t\t\t\t\tif(result){\r\n\t\t\t\t\t\tconst token = jwt.sign(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tusername: users[0].username,\r\n\t\t\t\t\t\t\t\tuserId: users[0]._id\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tprocess.env.JWT_KEY,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\texpiresIn: '48h'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\tmessage: 'Auth Successful',\r\n\t\t\t\t\t\t\ttoken: token,\r\n\t\t\t\t\t\t\tusername: users[0].username,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn res.statusJson(200, { data: data });\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn res.statusJson(402, { data: dataF });\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\terr: err,\r\n\t\t\t\t\tsuccess: false\r\n\t\t\t\t}\r\n\t\t\t\treturn res.statusJson(500, { data: data });\r\n\t\t\t});\r\n\t}\r\n\r\n\t@post('/signup')\r\n\t@bodyValidator('username', 'password')\r\n\tuserSignup(req: RequestWithBody, res: Response){\r\n\t\tconst { username, password } = req.body;\r\n\t\tUserModel\r\n\t\t\t.find({ username: username.toLowerCase() })\r\n\t\t\t.exec()\r\n\t\t\t.then((users: UserBaseDocument[])=>{\r\n\t\t\t\tif(users.length >= 1){\r\n\t\t\t\t\tconst data = { \r\n\t\t\t\t\t\tmessage: 'Sorry this username has already been taken'\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn res.statusJson(409, { data: data });\r\n\t\t\t\t}else {\r\n\t\t\t\t\tbcrypt.hash(password, 10, (err, hash)=>{\r\n\t\t\t\t\t\tif(err){ \r\n\t\t\t\t\t\t\treturn res.statusJson(500, { \r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\terr: err\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconst user: User = {\r\n\t\t\t\t\t\t\t\tusername: username.toLowerCase(),\r\n\t\t\t\t\t\t\t\tpassword: hash\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tUserModel.create(user).then((newUser) => {\r\n\t\t\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\t\t\tmessage: 'User created',\r\n\t\t\t\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\t\t\t\tuser: newUser\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn res.statusJson(200, { data: data });\r\n\t\t\t\t\t\t\t}).catch(err=>{\r\n\t\t\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\t\t\terr: err,\r\n\t\t\t\t\t\t\t\t\tsuccess: false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn res.statusJson(500, { data: data });\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\terr: err,\r\n\t\t\t\t\tsuccess: false\r\n\t\t\t\t}\r\n\t\t\t\treturn res.statusJson(500, { data: data });\r\n\t\t\t});\r\n\t}\r\n\r\n\t@get('/exist/:username')\r\n\tcheckUserExistence(req: Request, res: Response): void{\t\t\r\n\t\tconst { username } = req.params;\r\n\t\tlet data = { status: false, };\r\n\t\tUserModel.findOne({ 'username': username })\r\n\t\t\t\t.exec()\r\n\t\t\t\t.then((user: UserBaseDocument)=>{\r\n\t\t\t\t\tif(!user){\r\n\t\t\t\t\t\treturn res.statusJson(203, { data: data });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata.status = true;\r\n\t\t\t\t\treturn res.statusJson(200, { data: data });\r\n\t\t\t\t}).catch(err=>{\r\n\t\t\t\t\tdata['err'] = err;\r\n\t\t\t\t\tif(err){ return res.statusJson(500, { data: data }); }\r\n\t\t\t\t});\r\n\t}\r\n}"]}